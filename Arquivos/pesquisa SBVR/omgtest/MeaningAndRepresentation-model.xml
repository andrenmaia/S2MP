<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:cmof="http://schema.omg.org/spec/MOF/2.0/cmof.xml">
  <cmof:Package xmi:id="MeaningAndRepresentationVocabulary" name="Meaning and Representation Vocabulary" uri="http://www.omg.org/spec/SBVR/20070901/MeaningAndRepresentation.xml">
    <ownedMember xmi:type="cmof:Class" name="actuality" xmi:id="actuality" superClass="stateOfAffairs"/>
    <ownedMember xmi:type="cmof:Class" name="attributive namespace" xmi:id="attributiveNamespace" superClass="namespace"/>
    <ownedMember xmi:type="cmof:Class" name="binary fact type" xmi:id="binaryFactType" superClass="factType"/>
    <ownedMember xmi:type="cmof:Class" name="characteristic" xmi:id="characteristic" superClass="factType"/>
    <elementImport xmi:type="cmof:ElementImport" alias="unary fact type" xmi:id="unaryFactType" importedElement="characteristic"/>
    <ownedMember xmi:type="cmof:Class" name="concept" xmi:id="concept" superClass="meaning">
      <ownedAttribute xmi:type="cmof:Property" name="extension" xmi:id="concept.extension" type="set" lower="1" upper="1"/>
      <ownedAttribute xmi:type="cmof:Property" name="attributive namespace" xmi:id="concept.attributiveNamespace" type="attributiveNamespace" lower="0" upper="*"/>
      <ownedAttribute xmi:type="cmof:Property" name="definition" xmi:id="concept.definition" type="definition" lower="0" upper="*"/>
      <ownedAttribute xmi:type="cmof:Property" name="reference scheme" xmi:id="concept.referenceScheme" type="referenceScheme" lower="0" upper="*"/>
      <ownedAttribute xmi:type="cmof:Property" name="designation" xmi:id="concept.designation" type="designation" lower="0" upper="*"/>
      <ownedAttribute xmi:type="cmof:Property" name="instance" xmi:id="concept.instance" type="thing" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Class" name="concept type" xmi:id="conceptType" superClass="objectType"/>
    <ownedMember xmi:type="cmof:Class" name="conceptual schema" xmi:id="conceptualSchema" superClass="thing"/>
    <ownedMember xmi:type="cmof:Class" name="definition" xmi:id="definition" superClass="representation"/>
    <ownedMember xmi:type="cmof:Class" name="designation" xmi:id="designation" superClass="representation">
      <ownedAttribute xmi:type="cmof:Property" name="signifier" xmi:id="designation.signifier" type="expression" lower="1" upper="1"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Class" name="expression" xmi:id="expression" superClass="thing"/>
    <ownedMember xmi:type="cmof:Class" name="fact" xmi:id="fact" superClass="proposition"/>
    <ownedMember xmi:type="cmof:Class" name="fact model" xmi:id="factModel" superClass="thing"/>
    <elementImport xmi:type="cmof:ElementImport" alias="conceptual model" xmi:id="conceptualModel" importedElement="factModel"/>
    <ownedMember xmi:type="cmof:Class" name="fact type" xmi:id="factType" superClass="concept">
      <ownedAttribute xmi:type="cmof:Property" name="fact type form" xmi:id="factType.factTypeForm" type="factTypeForm" lower="0" upper="*"/>
      <ownedAttribute xmi:type="cmof:Property" name="role" xmi:id="factType.role" type="factTypeRole" lower="1" upper="*"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="verb concept" xmi:id="verbConcept" importedElement="factType"/>
    <ownedMember xmi:type="cmof:Class" name="fact type form" xmi:id="factTypeForm" superClass="representation">
      <ownedAttribute xmi:type="cmof:Property" name="placeholder" xmi:id="factTypeForm.placeholder" type="placeholder" lower="1" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Class" name="fact type has fact in fact model" xmi:id="factTypeHasFactInFactModel">
      <ownedAttribute xmi:type="cmof:Property" name="fact type" xmi:id="factTypeHasFactInFactModel.factType" type="factType" lower="1" upper="1"/>
      <ownedAttribute xmi:type="cmof:Property" name="fact" xmi:id="factTypeHasFactInFactModel.fact" type="fact" lower="1" upper="1"/>
      <ownedAttribute xmi:type="cmof:Property" name="fact model" xmi:id="factTypeHasFactInFactModel.factModel" type="factModel" lower="1" upper="1"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Class" name="fact type role" xmi:id="factTypeRole" superClass="role"/>
    <ownedMember xmi:type="cmof:Class" name="individual concept" xmi:id="individualConcept" superClass="nounConcept"/>
    <ownedMember xmi:type="cmof:Class" name="integer" xmi:id="integer" superClass="number">
      <ownedAttribute xmi:type="cmof:Property" name="value" xmi:id="integer.value" lower="0" upper="1">
        <type xmi:type="cmof:PrimitiveType" href="http://schema.omg.org/spec/UML/2.0/uml.xml#Integer"/>
      </ownedAttribute>
    </ownedMember>
    <ownedMember xmi:type="cmof:Class" name="language" xmi:id="language" superClass="thing"/>
    <ownedMember xmi:type="cmof:Class" name="meaning" xmi:id="meaning" superClass="thing">
      <ownedAttribute xmi:type="cmof:Property" name="representation" xmi:id="meaning.representation" type="representation" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Class" name="namespace" xmi:id="namespace" superClass="thing">
      <ownedAttribute xmi:type="cmof:Property" name="URI" xmi:id="namespace.URI" type="URI" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Class" name="nonnegative integer" xmi:id="nonnegativeInteger" superClass="integer"/>
    <ownedMember xmi:type="cmof:Class" name="noun concept" xmi:id="nounConcept" superClass="concept"/>
    <ownedMember xmi:type="cmof:Class" name="noun form" xmi:id="nounForm" superClass="factTypeForm"/>
    <ownedMember xmi:type="cmof:Class" name="number" xmi:id="number" superClass="quantity"/>
    <ownedMember xmi:type="cmof:Class" name="object type" xmi:id="objectType" superClass="concept"/>
    <elementImport xmi:type="cmof:ElementImport" alias="general concept" xmi:id="generalConcept" importedElement="objectType"/>
    <ownedMember xmi:type="cmof:Class" name="placeholder" xmi:id="placeholder" superClass="designation">
      <ownedAttribute xmi:type="cmof:Property" name="starting character position" xmi:id="placeholder.startingCharacterPosition" type="positiveInteger" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Class" name="positive integer" xmi:id="positiveInteger" superClass="nonnegativeInteger"/>
    <ownedMember xmi:type="cmof:Class" name="proposition" xmi:id="proposition" superClass="meaning">
      <ownedAttribute xmi:type="cmof:Property" name="is permitted to be true" xmi:id="proposition.isPermittedToBeTrue" lower="0" upper="1">
        <type xmi:type="cmof:PrimitiveType" href="http://schema.omg.org/spec/UML/2.0/uml.xml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="cmof:Property" name="statement" xmi:id="proposition.statement" type="statement" lower="0" upper="*"/>
      <ownedAttribute xmi:type="cmof:Property" name="is true" xmi:id="proposition.isTrue" lower="0" upper="1">
        <type xmi:type="cmof:PrimitiveType" href="http://schema.omg.org/spec/UML/2.0/uml.xml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="cmof:Property" name="is false" xmi:id="proposition.isFalse" lower="0" upper="1">
        <type xmi:type="cmof:PrimitiveType" href="http://schema.omg.org/spec/UML/2.0/uml.xml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="cmof:Property" name="is possibly true" xmi:id="proposition.isPossiblyTrue" lower="0" upper="1">
        <type xmi:type="cmof:PrimitiveType" href="http://schema.omg.org/spec/UML/2.0/uml.xml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="cmof:Property" name="is obligated to be true" xmi:id="proposition.isObligatedToBeTrue" lower="0" upper="1">
        <type xmi:type="cmof:PrimitiveType" href="http://schema.omg.org/spec/UML/2.0/uml.xml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="cmof:Property" name="is necessarily true" xmi:id="proposition.isNecessarilyTrue" lower="0" upper="1">
        <type xmi:type="cmof:PrimitiveType" href="http://schema.omg.org/spec/UML/2.0/uml.xml#Boolean"/>
      </ownedAttribute>
    </ownedMember>
    <ownedMember xmi:type="cmof:Class" name="quantity" xmi:id="quantity" superClass="nounConcept"/>
    <ownedMember xmi:type="cmof:Class" name="question" xmi:id="question" superClass="meaning"/>
    <ownedMember xmi:type="cmof:Class" name="reference scheme" xmi:id="referenceScheme" superClass="thing">
      <ownedAttribute xmi:type="cmof:Property" name="identifying characteristic" xmi:id="referenceScheme.identifyingCharacteristic" type="characteristic" lower="0" upper="*"/>
      <ownedAttribute xmi:type="cmof:Property" name="extensionally used role" xmi:id="referenceScheme.extensionallyUsedRole" type="factTypeRole" lower="0" upper="*"/>
      <ownedAttribute xmi:type="cmof:Property" name="simply used role" xmi:id="referenceScheme.simplyUsedRole" type="factTypeRole" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Class" name="representation" xmi:id="representation" superClass="actuality">
      <ownedAttribute xmi:type="cmof:Property" name="meaning" xmi:id="representation.meaning" type="meaning" lower="1" upper="1"/>
      <ownedAttribute xmi:type="cmof:Property" name="expression" xmi:id="representation.expression" type="expression" lower="1" upper="1"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Class" name="role" xmi:id="role" superClass="nounConcept"/>
    <ownedMember xmi:type="cmof:Class" name="sentential form" xmi:id="sententialForm" superClass="factTypeForm"/>
    <elementImport xmi:type="cmof:ElementImport" alias="fact type reading" xmi:id="factTypeReading" importedElement="sententialForm"/>
    <ownedMember xmi:type="cmof:Class" name="set" xmi:id="set" superClass="thing">
      <ownedAttribute xmi:type="cmof:Property" name="element" xmi:id="set.element" type="thing" lower="0" upper="*"/>
      <ownedAttribute xmi:type="cmof:Property" name="cardinality" xmi:id="set.cardinality" type="nonnegativeInteger" lower="0" upper="1"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Class" name="state of affairs" xmi:id="stateOfAffairs" superClass="thing"/>
    <ownedMember xmi:type="cmof:Class" name="state of affairs involves thing in role" xmi:id="stateOfAffairsInvolvesThingInRole">
      <ownedAttribute xmi:type="cmof:Property" name="state of affairs" xmi:id="stateOfAffairsInvolvesThingInRole.stateOfAffairs" type="stateOfAffairs" lower="1" upper="1"/>
      <ownedAttribute xmi:type="cmof:Property" name="thing" xmi:id="stateOfAffairsInvolvesThingInRole.thing" type="thing" lower="1" upper="1"/>
      <ownedAttribute xmi:type="cmof:Property" name="role" xmi:id="stateOfAffairsInvolvesThingInRole.role" type="role" lower="1" upper="1"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="thing fills role in state of affairs" xmi:id="thingFillsRoleInStateOfAffairs" importedElement="stateOfAffairsInvolvesThingInRole"/>
    <ownedMember xmi:type="cmof:Class" name="statement" xmi:id="statement" superClass="representation"/>
    <ownedMember xmi:type="cmof:Class" name="text" xmi:id="text" superClass="expression">
      <ownedAttribute xmi:type="cmof:Property" name="value" xmi:id="text.value" lower="0" upper="1">
        <type xmi:type="cmof:PrimitiveType" href="http://schema.omg.org/spec/UML/2.0/uml.xml#String"/>
      </ownedAttribute>
    </ownedMember>
    <ownedMember xmi:type="cmof:Class" name="thing" xmi:id="thing"/>
    <ownedMember xmi:type="cmof:Class" name="URI" xmi:id="URI" superClass="text"/>
    <elementImport xmi:type="cmof:ElementImport" alias="uniform resource identifier" xmi:id="uniformResourceIdentifier" importedElement="URI"/>
    <ownedMember xmi:type="cmof:Class" name="vocabulary namespace" xmi:id="vocabularyNamespace" superClass="namespace"/>
    <ownedMember xmi:type="cmof:Association" name="attributive namespace is for subject concept" xmi:id="attributiveNamespaceIsForSubjectConcept" memberEnd="attributiveNamespaceIsForSubjectConcept.attributiveNamespace attributiveNamespaceIsForSubjectConcept.subjectConcept">
      <ownedEnd xmi:type="cmof:Property" name="attributive namespace" xmi:id="attributiveNamespaceIsForSubjectConcept.attributiveNamespace" type="attributiveNamespace" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="subject concept" xmi:id="attributiveNamespaceIsForSubjectConcept.subjectConcept" type="concept" lower="1" upper="1"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="attributive namespace is within vocabulary namespace" xmi:id="attributiveNamespaceIsWithinVocabularyNamespace" memberEnd="attributiveNamespaceIsWithinVocabularyNamespace.attributiveNamespace attributiveNamespaceIsWithinVocabularyNamespace.vocabularyNamespace">
      <ownedEnd xmi:type="cmof:Property" name="attributive namespace" xmi:id="attributiveNamespaceIsWithinVocabularyNamespace.attributiveNamespace" type="attributiveNamespace" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="vocabulary namespace" xmi:id="attributiveNamespaceIsWithinVocabularyNamespace.vocabularyNamespace" type="vocabularyNamespace" lower="0" upper="*"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="vocabulary namespace includes attributive namespace" xmi:id="vocabularyNamespaceIncludesAttributiveNamespace" importedElement="attributiveNamespaceIsWithinVocabularyNamespace"/>
    <ownedMember xmi:type="cmof:Association" name="concept has definition" xmi:id="conceptHasDefinition" memberEnd="conceptHasDefinition.concept conceptHasDefinition.definition">
      <ownedEnd xmi:type="cmof:Property" name="concept" xmi:id="conceptHasDefinition.concept" type="concept" lower="1" upper="1"/>
      <ownedEnd xmi:type="cmof:Property" name="definition" xmi:id="conceptHasDefinition.definition" type="definition" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="concept has designation" xmi:id="conceptHasDesignation" memberEnd="conceptHasDesignation.concept conceptHasDesignation.designation">
      <ownedEnd xmi:type="cmof:Property" name="concept" xmi:id="conceptHasDesignation.concept" type="concept" lower="1" upper="1"/>
      <ownedEnd xmi:type="cmof:Property" name="designation" xmi:id="conceptHasDesignation.designation" type="designation" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="concept has extension" xmi:id="conceptHasExtension" memberEnd="conceptHasExtension.concept conceptHasExtension.extension">
      <ownedEnd xmi:type="cmof:Property" name="concept" xmi:id="conceptHasExtension.concept" type="concept" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="extension" xmi:id="conceptHasExtension.extension" type="set" lower="1" upper="1"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="concept has instance" xmi:id="conceptHasInstance" memberEnd="conceptHasInstance.concept conceptHasInstance.instance">
      <ownedEnd xmi:type="cmof:Property" name="concept" xmi:id="conceptHasInstance.concept" type="concept" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="instance" xmi:id="conceptHasInstance.instance" type="thing" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="concept incorporates characteristic" xmi:id="conceptIncorporatesCharacteristic" memberEnd="conceptIncorporatesCharacteristic.concept conceptIncorporatesCharacteristic.characteristic">
      <ownedEnd xmi:type="cmof:Property" name="concept" xmi:id="conceptIncorporatesCharacteristic.concept" type="concept" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="characteristic" xmi:id="conceptIncorporatesCharacteristic.characteristic" type="characteristic" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="concept is closed in conceptual schema" xmi:id="conceptIsClosedInConceptualSchema" memberEnd="conceptIsClosedInConceptualSchema.concept conceptIsClosedInConceptualSchema.conceptualSchema">
      <ownedEnd xmi:type="cmof:Property" name="concept" xmi:id="conceptIsClosedInConceptualSchema.concept" type="concept" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="conceptual schema" xmi:id="conceptIsClosedInConceptualSchema.conceptualSchema" type="conceptualSchema" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="concept1 is coextensive with concept2" xmi:id="concept1IsCoextensiveWithConcept2" memberEnd="concept1IsCoextensiveWithConcept2.concept1 concept1IsCoextensiveWithConcept2.concept2">
      <ownedEnd xmi:type="cmof:Property" name="concept1" xmi:id="concept1IsCoextensiveWithConcept2.concept1" type="concept" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="concept2" xmi:id="concept1IsCoextensiveWithConcept2.concept2" type="concept" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="concept1 specializes concept2" xmi:id="concept1SpecializesConcept2" memberEnd="concept1SpecializesConcept2.concept1 concept1SpecializesConcept2.concept2">
      <ownedEnd xmi:type="cmof:Property" name="concept1" xmi:id="concept1SpecializesConcept2.concept1" type="concept" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="concept2" xmi:id="concept1SpecializesConcept2.concept2" type="concept" lower="0" upper="*"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="concept2 generalizes concept1" xmi:id="concept2GeneralizesConcept1" importedElement="concept1SpecializesConcept2"/>
    <ownedMember xmi:type="cmof:Association" name="conceptual schema includes concept" xmi:id="conceptualSchemaIncludesConcept" memberEnd="conceptualSchemaIncludesConcept.conceptualSchema conceptualSchemaIncludesConcept.concept">
      <ownedEnd xmi:type="cmof:Property" name="conceptual schema" xmi:id="conceptualSchemaIncludesConcept.conceptualSchema" type="conceptualSchema" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="concept" xmi:id="conceptualSchemaIncludesConcept.concept" type="concept" lower="0" upper="*"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="concept is in conceptual schema" xmi:id="conceptIsInConceptualSchema" importedElement="conceptualSchemaIncludesConcept"/>
    <ownedMember xmi:type="cmof:Association" name="conceptual schema includes fact" xmi:id="conceptualSchemaIncludesFact" memberEnd="conceptualSchemaIncludesFact.conceptualSchema conceptualSchemaIncludesFact.fact">
      <ownedEnd xmi:type="cmof:Property" name="conceptual schema" xmi:id="conceptualSchemaIncludesFact.conceptualSchema" type="conceptualSchema" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="fact" xmi:id="conceptualSchemaIncludesFact.fact" type="fact" lower="0" upper="*"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="fact is in conceptual schema" xmi:id="factIsInConceptualSchema" importedElement="conceptualSchemaIncludesFact"/>
    <ownedMember xmi:type="cmof:Association" name="designation has signifier" xmi:id="designationHasSignifier" memberEnd="designationHasSignifier.designation designationHasSignifier.signifier">
      <ownedEnd xmi:type="cmof:Property" name="designation" xmi:id="designationHasSignifier.designation" type="designation" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="signifier" xmi:id="designationHasSignifier.signifier" type="expression" lower="1" upper="1"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="designation is in namespace" xmi:id="designationIsInNamespace" memberEnd="designationIsInNamespace.designation designationIsInNamespace.namespace">
      <ownedEnd xmi:type="cmof:Property" name="designation" xmi:id="designationIsInNamespace.designation" type="designation" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="namespace" xmi:id="designationIsInNamespace.namespace" type="namespace" lower="0" upper="*"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="namespace contains designation" xmi:id="namespaceContainsDesignation" importedElement="designationIsInNamespace"/>
    <ownedMember xmi:type="cmof:Association" name="expression represents meaning" xmi:id="expressionRepresentsMeaning" memberEnd="expressionRepresentsMeaning.expression expressionRepresentsMeaning.meaning">
      <ownedEnd xmi:type="cmof:Property" name="expression" xmi:id="expressionRepresentsMeaning.expression" type="expression" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="meaning" xmi:id="expressionRepresentsMeaning.meaning" type="meaning" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="fact model includes fact" xmi:id="factModelIncludesFact" memberEnd="factModelIncludesFact.factModel factModelIncludesFact.fact">
      <ownedEnd xmi:type="cmof:Property" name="fact model" xmi:id="factModelIncludesFact.factModel" type="factModel" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="fact" xmi:id="factModelIncludesFact.fact" type="fact" lower="0" upper="*"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="fact is in fact model" xmi:id="factIsInFactModel" importedElement="factModelIncludesFact"/>
    <ownedMember xmi:type="cmof:Association" name="fact model is based on conceptual schema" xmi:id="factModelIsBasedOnConceptualSchema" memberEnd="factModelIsBasedOnConceptualSchema.factModel factModelIsBasedOnConceptualSchema.conceptualSchema">
      <ownedEnd xmi:type="cmof:Property" name="fact model" xmi:id="factModelIsBasedOnConceptualSchema.factModel" type="factModel" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="conceptual schema" xmi:id="factModelIsBasedOnConceptualSchema.conceptualSchema" type="conceptualSchema" lower="0" upper="*"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="conceptual schema underlies fact model" xmi:id="conceptualSchemaUnderliesFactModel" importedElement="factModelIsBasedOnConceptualSchema"/>
    <ownedMember xmi:type="cmof:Association" name="fact type form demonstrates designation" xmi:id="factTypeFormDemonstratesDesignation" memberEnd="factTypeFormDemonstratesDesignation.factTypeForm factTypeFormDemonstratesDesignation.designation">
      <ownedEnd xmi:type="cmof:Property" name="fact type form" xmi:id="factTypeFormDemonstratesDesignation.factTypeForm" type="factTypeForm" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="designation" xmi:id="factTypeFormDemonstratesDesignation.designation" type="designation" lower="0" upper="1"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="fact type form is in namespace" xmi:id="factTypeFormIsInNamespace" memberEnd="factTypeFormIsInNamespace.factTypeForm factTypeFormIsInNamespace.namespace">
      <ownedEnd xmi:type="cmof:Property" name="fact type form" xmi:id="factTypeFormIsInNamespace.factTypeForm" type="factTypeForm" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="namespace" xmi:id="factTypeFormIsInNamespace.namespace" type="namespace" lower="0" upper="*"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="namespace contains fact type form" xmi:id="namespaceContainsFactTypeForm" importedElement="factTypeFormIsInNamespace"/>
    <ownedMember xmi:type="cmof:Association" name="fact type has fact type form" xmi:id="factTypeHasFactTypeForm" memberEnd="factTypeHasFactTypeForm.factType factTypeHasFactTypeForm.factTypeForm">
      <ownedEnd xmi:type="cmof:Property" name="fact type" xmi:id="factTypeHasFactTypeForm.factType" type="factType" lower="1" upper="1"/>
      <ownedEnd xmi:type="cmof:Property" name="fact type form" xmi:id="factTypeHasFactTypeForm.factTypeForm" type="factTypeForm" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="fact type is internally closed in conceptual schema" xmi:id="factTypeIsInternallyClosedInConceptualSchema" memberEnd="factTypeIsInternallyClosedInConceptualSchema.factType factTypeIsInternallyClosedInConceptualSchema.conceptualSchema">
      <ownedEnd xmi:type="cmof:Property" name="fact type" xmi:id="factTypeIsInternallyClosedInConceptualSchema.factType" type="factType" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="conceptual schema" xmi:id="factTypeIsInternallyClosedInConceptualSchema.conceptualSchema" type="conceptualSchema" lower="0" upper="*"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="fact type is semi-closed in conceptual schema" xmi:id="factTypeIsSemi-closedInConceptualSchema" importedElement="factTypeIsInternallyClosedInConceptualSchema"/>
    <ownedMember xmi:type="cmof:Association" name="fact type role is in fact type" xmi:id="factTypeRoleIsInFactType" memberEnd="factTypeRoleIsInFactType.factTypeRole factTypeRoleIsInFactType.factType">
      <ownedEnd xmi:type="cmof:Property" name="fact type role" xmi:id="factTypeRoleIsInFactType.factTypeRole" type="factTypeRole" lower="1" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="fact type" xmi:id="factTypeRoleIsInFactType.factType" type="factType" lower="1" upper="1"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="meaning corresponds to thing" xmi:id="meaningCorrespondsToThing" memberEnd="meaningCorrespondsToThing.meaning meaningCorrespondsToThing.thing">
      <ownedEnd xmi:type="cmof:Property" name="meaning" xmi:id="meaningCorrespondsToThing.meaning" type="meaning" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="thing" xmi:id="meaningCorrespondsToThing.thing" type="thing" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="namespace has URI" xmi:id="namespaceHasURI" memberEnd="namespaceHasURI.namespace namespaceHasURI.URI">
      <ownedEnd xmi:type="cmof:Property" name="namespace" xmi:id="namespaceHasURI.namespace" type="namespace" lower="0" upper="1"/>
      <ownedEnd xmi:type="cmof:Property" name="URI" xmi:id="namespaceHasURI.URI" type="URI" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="namespace1 incorporates namespace2" xmi:id="namespace1IncorporatesNamespace2" memberEnd="namespace1IncorporatesNamespace2.namespace1 namespace1IncorporatesNamespace2.namespace2">
      <ownedEnd xmi:type="cmof:Property" name="namespace1" xmi:id="namespace1IncorporatesNamespace2.namespace1" type="namespace" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="namespace2" xmi:id="namespace1IncorporatesNamespace2.namespace2" type="namespace" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="placeholder is at starting character position" xmi:id="placeholderIsAtStartingCharacterPosition" memberEnd="placeholderIsAtStartingCharacterPosition.placeholder placeholderIsAtStartingCharacterPosition.startingCharacterPosition">
      <ownedEnd xmi:type="cmof:Property" name="placeholder" xmi:id="placeholderIsAtStartingCharacterPosition.placeholder" type="placeholder" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="starting character position" xmi:id="placeholderIsAtStartingCharacterPosition.startingCharacterPosition" type="positiveInteger" lower="0" upper="*"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="placeholder has starting character position" xmi:id="placeholderHasStartingCharacterPosition" importedElement="placeholderIsAtStartingCharacterPosition"/>
    <ownedMember xmi:type="cmof:Association" name="placeholder is in fact type form" xmi:id="placeholderIsInFactTypeForm" memberEnd="placeholderIsInFactTypeForm.placeholder placeholderIsInFactTypeForm.factTypeForm">
      <ownedEnd xmi:type="cmof:Property" name="placeholder" xmi:id="placeholderIsInFactTypeForm.placeholder" type="placeholder" lower="1" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="fact type form" xmi:id="placeholderIsInFactTypeForm.factTypeForm" type="factTypeForm" lower="1" upper="1"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="fact type form has placeholder" xmi:id="factTypeFormHasPlaceholder" importedElement="placeholderIsInFactTypeForm"/>
    <ownedMember xmi:type="cmof:Association" name="placeholder uses designation" xmi:id="placeholderUsesDesignation" memberEnd="placeholderUsesDesignation.placeholder placeholderUsesDesignation.designation">
      <ownedEnd xmi:type="cmof:Property" name="placeholder" xmi:id="placeholderUsesDesignation.placeholder" type="placeholder" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="designation" xmi:id="placeholderUsesDesignation.designation" type="designation" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="quantity1 equals quantity2" xmi:id="quantity1EqualsQuantity2" memberEnd="quantity1EqualsQuantity2.quantity1 quantity1EqualsQuantity2.quantity2">
      <ownedEnd xmi:type="cmof:Property" name="quantity1" xmi:id="quantity1EqualsQuantity2.quantity1" type="quantity" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="quantity2" xmi:id="quantity1EqualsQuantity2.quantity2" type="quantity" lower="0" upper="*"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="quantity1 is equals to quantity2" xmi:id="quantity1IsEqualsToQuantity2" importedElement="quantity1EqualsQuantity2"/>
    <ownedMember xmi:type="cmof:Association" name="quantity1 is less than quantity2" xmi:id="quantity1IsLessThanQuantity2" memberEnd="quantity1IsLessThanQuantity2.quantity1 quantity1IsLessThanQuantity2.quantity2">
      <ownedEnd xmi:type="cmof:Property" name="quantity1" xmi:id="quantity1IsLessThanQuantity2.quantity1" type="quantity" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="quantity2" xmi:id="quantity1IsLessThanQuantity2.quantity2" type="quantity" lower="0" upper="*"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="quantity2 is greater than quantity1" xmi:id="quantity2IsGreaterThanQuantity1" importedElement="quantity1IsLessThanQuantity2"/>
    <ownedMember xmi:type="cmof:Association" name="reference scheme extensionally uses fact type role" xmi:id="referenceSchemeExtensionallyUsesFactTypeRole" memberEnd="referenceSchemeExtensionallyUsesFactTypeRole.referenceScheme referenceSchemeExtensionallyUsesFactTypeRole.factTypeRole">
      <ownedEnd xmi:type="cmof:Property" name="reference scheme" xmi:id="referenceSchemeExtensionallyUsesFactTypeRole.referenceScheme" type="referenceScheme" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="fact type role" xmi:id="referenceSchemeExtensionallyUsesFactTypeRole.factTypeRole" type="factTypeRole" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="reference scheme is for concept" xmi:id="referenceSchemeIsForConcept" memberEnd="referenceSchemeIsForConcept.referenceScheme referenceSchemeIsForConcept.concept">
      <ownedEnd xmi:type="cmof:Property" name="reference scheme" xmi:id="referenceSchemeIsForConcept.referenceScheme" type="referenceScheme" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="concept" xmi:id="referenceSchemeIsForConcept.concept" type="concept" lower="1" upper="*"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="concept has reference scheme" xmi:id="conceptHasReferenceScheme" importedElement="referenceSchemeIsForConcept"/>
    <ownedMember xmi:type="cmof:Association" name="reference scheme simply uses fact type role" xmi:id="referenceSchemeSimplyUsesFactTypeRole" memberEnd="referenceSchemeSimplyUsesFactTypeRole.referenceScheme referenceSchemeSimplyUsesFactTypeRole.factTypeRole">
      <ownedEnd xmi:type="cmof:Property" name="reference scheme" xmi:id="referenceSchemeSimplyUsesFactTypeRole.referenceScheme" type="referenceScheme" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="fact type role" xmi:id="referenceSchemeSimplyUsesFactTypeRole.factTypeRole" type="factTypeRole" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="reference scheme uses characteristic" xmi:id="referenceSchemeUsesCharacteristic" memberEnd="referenceSchemeUsesCharacteristic.referenceScheme referenceSchemeUsesCharacteristic.characteristic">
      <ownedEnd xmi:type="cmof:Property" name="reference scheme" xmi:id="referenceSchemeUsesCharacteristic.referenceScheme" type="referenceScheme" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="characteristic" xmi:id="referenceSchemeUsesCharacteristic.characteristic" type="characteristic" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="representation has expression" xmi:id="representationHasExpression" memberEnd="representationHasExpression.representation representationHasExpression.expression">
      <ownedEnd xmi:type="cmof:Property" name="representation" xmi:id="representationHasExpression.representation" type="representation" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="expression" xmi:id="representationHasExpression.expression" type="expression" lower="1" upper="1"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="representation represents meaning" xmi:id="representationRepresentsMeaning" memberEnd="representationRepresentsMeaning.representation representationRepresentsMeaning.meaning">
      <ownedEnd xmi:type="cmof:Property" name="representation" xmi:id="representationRepresentsMeaning.representation" type="representation" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="meaning" xmi:id="representationRepresentsMeaning.meaning" type="meaning" lower="1" upper="1"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="meaning has representation" xmi:id="meaningHasRepresentation" importedElement="representationRepresentsMeaning"/>
    <elementImport xmi:type="cmof:ElementImport" alias="representation has meaning" xmi:id="representationHasMeaning" importedElement="representationRepresentsMeaning"/>
    <ownedMember xmi:type="cmof:Association" name="role ranges over object type" xmi:id="roleRangesOverObjectType" memberEnd="roleRangesOverObjectType.role roleRangesOverObjectType.objectType">
      <ownedEnd xmi:type="cmof:Property" name="role" xmi:id="roleRangesOverObjectType.role" type="role" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="object type" xmi:id="roleRangesOverObjectType.objectType" type="objectType" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="set has cardinality" xmi:id="setHasCardinality" memberEnd="setHasCardinality.set setHasCardinality.cardinality">
      <ownedEnd xmi:type="cmof:Property" name="set" xmi:id="setHasCardinality.set" type="set" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="cardinality" xmi:id="setHasCardinality.cardinality" type="nonnegativeInteger" lower="0" upper="1"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="statement expresses proposition" xmi:id="statementExpressesProposition" memberEnd="statementExpressesProposition.statement statementExpressesProposition.proposition">
      <ownedEnd xmi:type="cmof:Property" name="statement" xmi:id="statementExpressesProposition.statement" type="statement" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="proposition" xmi:id="statementExpressesProposition.proposition" type="proposition" lower="1" upper="1"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="proposition has statement" xmi:id="propositionHasStatement" importedElement="statementExpressesProposition"/>
    <ownedMember xmi:type="cmof:Association" name="thing is in set" xmi:id="thingIsInSet" memberEnd="thingIsInSet.thing thingIsInSet.set">
      <ownedEnd xmi:type="cmof:Property" name="thing" xmi:id="thingIsInSet.thing" type="thing" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="set" xmi:id="thingIsInSet.set" type="set" lower="0" upper="*"/>
    </ownedMember>
    <elementImport xmi:type="cmof:ElementImport" alias="set includes thing" xmi:id="setIncludesThing" importedElement="thingIsInSet"/>
    <ownedMember xmi:type="cmof:Association" name="thing1 is thing2" xmi:id="thing1IsThing2" memberEnd="thing1IsThing2.thing1 thing1IsThing2.thing2">
      <ownedEnd xmi:type="cmof:Property" name="thing1" xmi:id="thing1IsThing2.thing1" type="thing" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="thing2" xmi:id="thing1IsThing2.thing2" type="thing" lower="0" upper="*"/>
    </ownedMember>
    <ownedMember xmi:type="cmof:Association" name="vocabulary namespace is for language" xmi:id="vocabularyNamespaceIsForLanguage" memberEnd="vocabularyNamespaceIsForLanguage.vocabularyNamespace vocabularyNamespaceIsForLanguage.language">
      <ownedEnd xmi:type="cmof:Property" name="vocabulary namespace" xmi:id="vocabularyNamespaceIsForLanguage.vocabularyNamespace" type="vocabularyNamespace" lower="0" upper="*"/>
      <ownedEnd xmi:type="cmof:Property" name="language" xmi:id="vocabularyNamespaceIsForLanguage.language" type="language" lower="0" upper="*"/>
    </ownedMember>
  </cmof:Package>
  <cmof:Tag name="org.omg.xmi.nsPrefix" value="sbvr" element="MeaningAndRepresentationVocabulary"/>
  <cmof:Tag name="org.omg.xmi.nsURI" value="http://www.omg.org/spec/SBVR/20070901/MeaningAndRepresentation.xml" element="MeaningAndRepresentationVocabulary"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="attributiveNamespace" element="attributiveNamespace"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="binaryFactType" element="binaryFactType"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="characteristic" element="characteristic"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="concept.extension conceptHasExtension.extension"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="attributiveNamespace" element="concept.attributiveNamespace"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="concept.attributiveNamespace attributiveNamespaceIsForSubjectConcept.attributiveNamespace"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="concept.definition conceptHasDefinition.definition"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="referenceScheme" element="concept.referenceScheme"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="concept.referenceScheme referenceSchemeIsForConcept.referenceScheme"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="concept.designation conceptHasDesignation.designation"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="concept.instance conceptHasInstance.instance"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="conceptType" element="conceptType"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="conceptualSchema" element="conceptualSchema"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="designation.signifier designationHasSignifier.signifier"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factModel" element="factModel"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factTypeForm" element="factType.factTypeForm"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="factType.factTypeForm factTypeHasFactTypeForm.factTypeForm"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="factType.role factTypeRoleIsInFactType.factTypeRole"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factType" element="factType"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="factTypeForm.placeholder placeholderIsInFactTypeForm.placeholder"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factTypeForm" element="factTypeForm"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factType" element="factTypeHasFactInFactModel.factType"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factModel" element="factTypeHasFactInFactModel.factModel"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factTypeHasFactInFactModel" element="factTypeHasFactInFactModel"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factTypeRole" element="factTypeRole"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="individualConcept" element="individualConcept"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="meaning.representation representationRepresentsMeaning.representation"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="namespace.URI namespaceHasURI.URI"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="nonnegativeInteger" element="nonnegativeInteger"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="nounConcept" element="nounConcept"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="nounForm" element="nounForm"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="objectType" element="objectType"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="startingCharacterPosition" element="placeholder.startingCharacterPosition"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="placeholder.startingCharacterPosition placeholderIsAtStartingCharacterPosition.startingCharacterPosition"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="positiveInteger" element="positiveInteger"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="isPermittedToBeTrue" element="proposition.isPermittedToBeTrue"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="proposition.statement statementExpressesProposition.statement"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="isTrue" element="proposition.isTrue"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="isFalse" element="proposition.isFalse"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="isPossiblyTrue" element="proposition.isPossiblyTrue"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="isObligatedToBeTrue" element="proposition.isObligatedToBeTrue"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="isNecessarilyTrue" element="proposition.isNecessarilyTrue"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="identifyingCharacteristic" element="referenceScheme.identifyingCharacteristic"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="referenceScheme.identifyingCharacteristic referenceSchemeUsesCharacteristic.characteristic"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="extensionallyUsedRole" element="referenceScheme.extensionallyUsedRole"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="referenceScheme.extensionallyUsedRole referenceSchemeExtensionallyUsesFactTypeRole.factTypeRole"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="simplyUsedRole" element="referenceScheme.simplyUsedRole"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="referenceScheme.simplyUsedRole referenceSchemeSimplyUsesFactTypeRole.factTypeRole"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="referenceScheme" element="referenceScheme"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="representation.meaning representationRepresentsMeaning.meaning"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="representation.expression representationHasExpression.expression"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="sententialForm" element="sententialForm"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="set.element thingIsInSet.thing"/>
  <cmof:Tag name="org.omg.sbvr.sameRole" value="" element="set.cardinality setHasCardinality.cardinality"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="stateOfAffairs" element="stateOfAffairs"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="stateOfAffairs" element="stateOfAffairsInvolvesThingInRole.stateOfAffairs"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="stateOfAffairsInvolvesThingInRole" element="stateOfAffairsInvolvesThingInRole"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="URI" element="URI"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="vocabularyNamespace" element="vocabularyNamespace"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="attributiveNamespace" element="attributiveNamespaceIsForSubjectConcept.attributiveNamespace"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="subjectConcept" element="attributiveNamespaceIsForSubjectConcept.subjectConcept"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="attributiveNamespaceIsForSubjectConcept" element="attributiveNamespaceIsForSubjectConcept"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="attributiveNamespace" element="attributiveNamespaceIsWithinVocabularyNamespace.attributiveNamespace"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="vocabularyNamespace" element="attributiveNamespaceIsWithinVocabularyNamespace.vocabularyNamespace"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="attributiveNamespaceIsWithinVocabularyNamespace" element="attributiveNamespaceIsWithinVocabularyNamespace"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="conceptHasDefinition" element="conceptHasDefinition"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="conceptHasDesignation" element="conceptHasDesignation"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="conceptHasExtension" element="conceptHasExtension"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="conceptHasInstance" element="conceptHasInstance"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="conceptIncorporatesCharacteristic" element="conceptIncorporatesCharacteristic"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="conceptualSchema" element="conceptIsClosedInConceptualSchema.conceptualSchema"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="conceptIsClosedInConceptualSchema" element="conceptIsClosedInConceptualSchema"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="concept1IsCoextensiveWithConcept2" element="concept1IsCoextensiveWithConcept2"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="concept1SpecializesConcept2" element="concept1SpecializesConcept2"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="conceptualSchema" element="conceptualSchemaIncludesConcept.conceptualSchema"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="conceptualSchemaIncludesConcept" element="conceptualSchemaIncludesConcept"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="conceptualSchema" element="conceptualSchemaIncludesFact.conceptualSchema"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="conceptualSchemaIncludesFact" element="conceptualSchemaIncludesFact"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="designationHasSignifier" element="designationHasSignifier"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="designationIsInNamespace" element="designationIsInNamespace"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="expressionRepresentsMeaning" element="expressionRepresentsMeaning"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factModel" element="factModelIncludesFact.factModel"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factModelIncludesFact" element="factModelIncludesFact"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factModel" element="factModelIsBasedOnConceptualSchema.factModel"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="conceptualSchema" element="factModelIsBasedOnConceptualSchema.conceptualSchema"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factModelIsBasedOnConceptualSchema" element="factModelIsBasedOnConceptualSchema"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factTypeForm" element="factTypeFormDemonstratesDesignation.factTypeForm"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factTypeFormDemonstratesDesignation" element="factTypeFormDemonstratesDesignation"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factTypeForm" element="factTypeFormIsInNamespace.factTypeForm"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factTypeFormIsInNamespace" element="factTypeFormIsInNamespace"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factType" element="factTypeHasFactTypeForm.factType"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factTypeForm" element="factTypeHasFactTypeForm.factTypeForm"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factTypeHasFactTypeForm" element="factTypeHasFactTypeForm"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factType" element="factTypeIsInternallyClosedInConceptualSchema.factType"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="conceptualSchema" element="factTypeIsInternallyClosedInConceptualSchema.conceptualSchema"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factTypeIsInternallyClosedInConceptualSchema" element="factTypeIsInternallyClosedInConceptualSchema"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factTypeRole" element="factTypeRoleIsInFactType.factTypeRole"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factType" element="factTypeRoleIsInFactType.factType"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factTypeRoleIsInFactType" element="factTypeRoleIsInFactType"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="meaningCorrespondsToThing" element="meaningCorrespondsToThing"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="namespaceHasURI" element="namespaceHasURI"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="namespace1IncorporatesNamespace2" element="namespace1IncorporatesNamespace2"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="startingCharacterPosition" element="placeholderIsAtStartingCharacterPosition.startingCharacterPosition"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="placeholderIsAtStartingCharacterPosition" element="placeholderIsAtStartingCharacterPosition"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factTypeForm" element="placeholderIsInFactTypeForm.factTypeForm"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="placeholderIsInFactTypeForm" element="placeholderIsInFactTypeForm"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="placeholderUsesDesignation" element="placeholderUsesDesignation"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="quantity1EqualsQuantity2" element="quantity1EqualsQuantity2"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="quantity1IsLessThanQuantity2" element="quantity1IsLessThanQuantity2"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="referenceScheme" element="referenceSchemeExtensionallyUsesFactTypeRole.referenceScheme"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factTypeRole" element="referenceSchemeExtensionallyUsesFactTypeRole.factTypeRole"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="referenceSchemeExtensionallyUsesFactTypeRole" element="referenceSchemeExtensionallyUsesFactTypeRole"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="referenceScheme" element="referenceSchemeIsForConcept.referenceScheme"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="referenceSchemeIsForConcept" element="referenceSchemeIsForConcept"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="referenceScheme" element="referenceSchemeSimplyUsesFactTypeRole.referenceScheme"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="factTypeRole" element="referenceSchemeSimplyUsesFactTypeRole.factTypeRole"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="referenceSchemeSimplyUsesFactTypeRole" element="referenceSchemeSimplyUsesFactTypeRole"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="referenceScheme" element="referenceSchemeUsesCharacteristic.referenceScheme"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="referenceSchemeUsesCharacteristic" element="referenceSchemeUsesCharacteristic"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="representationHasExpression" element="representationHasExpression"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="representationRepresentsMeaning" element="representationRepresentsMeaning"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="objectType" element="roleRangesOverObjectType.objectType"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="roleRangesOverObjectType" element="roleRangesOverObjectType"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="setHasCardinality" element="setHasCardinality"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="statementExpressesProposition" element="statementExpressesProposition"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="thingIsInSet" element="thingIsInSet"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="thing1IsThing2" element="thing1IsThing2"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="vocabularyNamespace" element="vocabularyNamespaceIsForLanguage.vocabularyNamespace"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="vocabularyNamespaceIsForLanguage" element="vocabularyNamespaceIsForLanguage"/>
  <cmof:Tag name="org.omg.xmi.xmiName" value="MeaningAndRepresentationVocabulary" element="MeaningAndRepresentationVocabulary"/>
</xmi:XMI>
